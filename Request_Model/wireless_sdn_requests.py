from random import randintimport randomclass Task(object):    def __init__(self):        self.task_time = -1        self.flag_new_requests = False        self.tuple_poptime_requests = ()        self.flag_expire_requests = False        self.expire_ilp = []        self.expire_ga  = []        self.expire_sph = []class Request(object):    def __init__(self):        self.request_id = -1        self.src        = None        self.dst        = None        self.request_bw = -1        self.number_dst = -1        self.life_time  = -1        self.pop_time   = -1class RequestGenerator(object):    def __init__(self, number_nodes):        self.number_nodes = number_nodes        self.count        = 0    def generate_one_request(self, k, life_time, pop_time):        req = Request()        req.request_id = k        req.src = randint(0, self.number_nodes)        req.dst = randint(0, self.number_nodes)        req.request_bw = random.choice([1, 2, 3])        req.life_time = life_time        req.pop_time = pop_time        return req    def generate_requests(self, life_time, pop_time):        number_of_vlinks = random.choice([4, 6])        requests = []        for k in range(self.count, self.count + number_of_vlinks):            requests.append(self.generate_one_request(k, life_time, pop_time))        self.count += number_of_vlinks        return requests